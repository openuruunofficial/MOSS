# Configuration file for the front-end server process(es).

# Comment lines start with # (whitespace in front of the # allowed). All
# configurations have the form "name = value" (whitespace optional).
# Whitespace and commas are allowed in the value, but if you mean "," to be
# part of the value and not a field separator, it must be quoted: "\,".

# ===================================
# common configuration for dispatcher
# ===================================

# the address to bind to (default is INADDR_ANY) and the port to use;
# don't set the port to other than 14617 unless you really mean it

#bind_address = 0.0.0.0
#bind_port = 14617

# the address of where to reach the vault server (default is localhost)
# and the port
# note that at present this is *also* the address of the tracking server

#vault_address = 127.0.0.1
#vault_port = 14618

# the directory in which to put log files (default is "log") and the
# log level (default is "NET")
# log levels: MSGS, DEBUG, NET, WARN, INFO, ERR

#log_dir = log
#log_level = NET

# the file to put the PID into (default is /var/run/moss.pid)
#pid_file = /var/run/moss.pid

# what types of server can run on this IP address (default is 
# auth,file,game,gatekeeper)

#server_types = auth,file,game,gatekeeper,status

# the advertised hostname or IP address to tell clients to connect to; if
# this is unset, bind_address will be used, unless that's INADDR_ANY, in which
# case localhost will be used which is almost certainly not what you want

#external_address = 

# if this is set to true, the external_address will be resolved for each
# gatekeeper response or game server connection (default is false); set
# this if you are running the server on a system which can be renumbered
# (note: for this to work, bind_addr has to be 0.0.0.0 and external_address
# has to be a DNS name)

#always_resolve = false

# *if* sub-server forking is enabled at configure time, the name of the
# executable used for the child auth and file server processes (default
# is "./bin/moss_serv")

#child_name = ./bin/moss_serv

# ===================================
# if server_types includes "auth"
# ===================================

# location of files presented in "secure download" (default is "auth"); note
# that this directory can have multiple subdirectories, and at least one named
# "default" must be present

#auth_download_dir = auth

#auth_log_level = NET

# location of key file for auth connections, loaded each time the config is
# loaded; may be ignored depending on crypto choice

#auth_key_file = ./etc/auth_key.der

# ===================================
# if server_types includes "file"
# ===================================

# location of files presented by the file server (default is "file")

#file_download_dir = file

#file_log_level = WARN

# ===================================
# if server_types includes "game"
# ===================================

# location of game state files (default is "game"), in which the directory
# "state" is populated by GUID)

#game_data_dir = game

#game_log_level = NET

# location of key file for game connections, loaded each time the config is
# loaded; may be ignored depending on crypto choice

#game_key_file = ./etc/game_key.der

# ===================================
# if server_types includes "gatekeeper"
# ===================================

# location of key file for gatekeeper connections, loaded each time the config
# is loaded; may be ignored depending on crypto choice

#gatekeeper_key_file = ./etc/gatekeeper_key.der

#gatekeeper_log_level = WARN

# ===================================
# if server_types includes "status"
# ===================================

# status message sent in response to HTTP GET for
# /serverstatus/urulivelive.php (default is "Welcome to MOSS")
# (all other requests 404); note this string will be
# truncated to 1000 characters if it is longer
# also note that only two lines of text show up in the window
# (use \r\n for a line break)

#status_message = Welcome to MOSS
